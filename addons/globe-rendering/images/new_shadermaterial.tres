[gd_resource type="ShaderMaterial" load_steps=4 format=2]

[sub_resource type="VisualShaderNodeFloatFunc" id=1]
function = 2

[sub_resource type="VisualShaderNodeInput" id=2]
input_name = "uv"

[sub_resource type="VisualShader" id=3]
code = "shader_type spatial;
render_mode specular_schlick_ggx, async_visible;




void vertex() {
// Output:0

}

void fragment() {
// Input:3
	vec3 n_out3p0 = vec3(UV, 0.0);

// ScalarFunc:2
	float n_out2p0 = tan(dot(n_out3p0, vec3(0.333333, 0.333333, 0.333333)));

// Output:0
	ALPHA = n_out2p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -688, 8.66667 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( -360, 360 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( -900, 320 )
nodes/fragment/connections = PackedInt32Array( 2, 0, 0, 1, 3, 0, 2, 0 )

[resource]
shader = SubResource( 3 )
